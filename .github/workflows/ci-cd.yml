name: Django CI/CD

on:
  push:
    branches: [main, dev/web]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: brain-tutor
  TEST_TAG: brain-tutor:ci-test
  PROD_TAG: ${{ secrets.DOCKER_USERNAME }}/brain-tutor:latest
  POSTGRES_DB: brain_tutor_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DATABASE_HOST: db
  DATABASE_PORT: 5432
  REDIS_HOST: redis
  REDIS_PORT: 6379

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Сборка тестового образа без пуша
    - name: Build Docker image (for testing)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ${{ env.TEST_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Создаем пользовательскую сеть для запуска контейнеров
    - name: Create Docker network
      run: docker network create cicd_network || echo "Network already exists"

    # Запускаем Postgres и Redis локально в CI
    - name: Start Postgres container
      run: |
        docker run -d --name postgres --network cicd_network \
          -e POSTGRES_DB=${{ env.POSTGRES_DB }} \
          -e POSTGRES_USER=${{ env.POSTGRES_USER }} \
          -e POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} \
          postgres:15

    - name: Start Redis container
      run: |
        docker run -d --name redis --network cicd_network redis:7

    # Ждем, пока Postgres будет доступен
    - name: Wait for Postgres
      run: |
        for i in {1..30}; do
          docker exec postgres pg_isready -U ${{ env.POSTGRES_USER }} && break
          echo "Waiting for postgres..."
          sleep 1
        done

    # Останавливаем и удаляем сервисы Postgres и Redis
    - name: Clean up containers
      run: |
        docker stop postgres redis
        docker rm postgres redis
        docker network rm cicd_network || echo "Network removal failed or network doesn't exist"

    # Финальная сборка и пуш в Docker Hub
    - name: Build and push production image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.PROD_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
