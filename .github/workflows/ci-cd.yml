name: Django CI/CD

on:
  push:
    branches: [ main, dev/web ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: brain-tutor
  TEST_TAG: brain-tutor:ci-test
  PROD_TAG: ${{ secrets.DOCKER_USERNAME }}/brain-tutor:latest

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: brain_tutor_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image (for testing)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ${{ env.TEST_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Start dependencies and web service
      run: |
        docker network create cicd_network || true
        docker run -d --name postgres --network cicd_network -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=brain_tutor_db postgres:15
        docker run -d --name redis --network cicd_network redis:7
        docker run -d --name web --network cicd_network -p 8000:8000 ${{ env.TEST_TAG }}

    - name: Wait for Postgres
      run: |
        for i in {1..10}; do
          docker exec postgres pg_isready -U postgres && break
          echo "Waiting for Postgres..."
          sleep 5
        done

    - name: Run migrations and tests
      run: |
        docker exec web python manage.py migrate
        docker exec web python manage.py test

    - name: Cleanup test containers
      run: |
        docker rm -f web postgres redis
        docker network rm cicd_network || true

    - name: Build and push production image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.PROD_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
